{"version":3,"file":"static/js/260.b7fb0148.chunk.js","mappings":"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","sources":["clients/HangmanApi.ts","components/Header.tsx","hooks/Hooks.tsx","components/hangman/Keyboard.tsx","components/hangman/Answer.tsx","components/hangman/History.tsx","components/hangman/Timer.tsx","routes/Hangman.tsx","../node_modules/classnames/index.js"],"sourcesContent":["import axios from 'axios';\r\nimport config from './config.json';\r\n\r\nexport type Letter = 'a' | 'b' | 'c' | 'd' | 'e' | 'f' | 'g' | 'h' | 'i' | 'j' | 'k' | 'l' | 'm' | 'n' | 'o' | 'p' | 'q' | 'r' | 's' | 't' | 'u' | 'v' | 'w' | 'x' | 'y' | 'z';\r\n\r\nexport type Time = string;\r\n\r\nexport type GameState = {\r\n  game_id: string;\r\n  user_name: string;\r\n  answer: string;\r\n  start_time: Time;\r\n  expiration_time?: Time;\r\n  description?: string;\r\n  guesses: {\r\n    letter: Letter;\r\n    time: Time;\r\n    is_correct: boolean;\r\n  }[];\r\n};\r\n\r\nexport type Leaderboard = {\r\n  game_id: string;\r\n  user_name: string;\r\n  answer: string;\r\n  total_time: number;\r\n};\r\n\r\nexport default class HangmanApi {\r\n  public static LETTERS: Letter[] = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];\r\n\r\n  public static async createGame(user_name: string) {\r\n    try {\r\n      const response = await axios.post<GameState>(\r\n        `${config.api_host_url}/game`,\r\n        {\r\n          user_name,\r\n          time_limit: {\r\n            type: \"Cumulative\",\r\n            initial_ms: 60000,\r\n            correct_guess_ms: 5000,\r\n            wrong_guess_ms: -5000\r\n          }\r\n        }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  public static async getGame(gameId: string) {\r\n    try {\r\n      const response = await axios.get<GameState>(\r\n        `${config.api_host_url}/game/${gameId}`\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  public static async createGuess(gameId: string, letter: string) {\r\n    try {\r\n      const response = await axios.post<GameState>(\r\n        `${config.api_host_url}/game/${gameId}/guess/${letter}`\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  public static async getLeaderboard() {\r\n    try {\r\n      const response = await axios.get<Leaderboard[]>(\r\n        `${config.api_host_url}/leaderboard`\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n}","import { useCallback, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useWindowSize } from \"../hooks/Hooks\";\nimport \"./Header.css\";\n\nexport default function Header() {\n  const { pathname } = useLocation();\n  const size = useWindowSize();\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const toggleExpanded = useCallback(() => {\n    setIsExpanded((prev) => !prev);\n  }, []);\n\n  const links = [\n    {\n      name: \"Home\",\n      to: \"/\",\n      selected: pathname === \"/\",\n    },\n    {\n      name: \"Hangman\",\n      to: \"/hangman\",\n      selected: pathname.startsWith(\"/hangman\"),\n    },\n    {\n      name: \"Resume\",\n      to: \"/resume\",\n      selected: pathname.startsWith(\"/resume\"),\n    },\n  ];\n\n  let linkItems: JSX.Element;\n  if (size.width > 450) {\n    linkItems = (\n      <>\n        {links.map((link) => (\n          <span key={link.name} className=\"header-float-left\">\n            <Link className=\"header-button-link\" to={link.to}>\n              {link.name}\n            </Link>\n          </span>\n        ))}\n      </>\n    );\n  } else {\n    linkItems = (\n      <span\n        onClick={toggleExpanded}\n        className=\"material-icons-round header-hamburger\"\n      >\n        menu\n      </span>\n    );\n  }\n\n  return (\n    <div className=\"header-content\">\n      <div className=\"header-top-row\">\n        {linkItems}\n        <span className=\"header-float-right\">\n          <Link className=\"header-button-link\" to=\"/resume\">\n            Ben McAllister\n            <img src=\"/ben.jpg\" className=\"header-spinning-image\" alt=\"ben\" />\n          </Link>\n        </span>\n      </div>\n      {isExpanded &&\n        links.map((link) => (\n          <div key={link.name} className=\"header-row\">\n            <Link className=\"header-button-link\" to={link.to}>\n              {link.name}\n            </Link>\n          </div>\n        ))}\n    </div>\n  );\n}\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport { Time } from \"../clients/HangmanApi\";\r\n\r\nexport function useWindowSize() {\r\n  const [size, setSize] = useState({\r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n  });\r\n\r\n  const updateSize = useCallback(() => {\r\n    setSize({\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", updateSize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", updateSize);\r\n    };\r\n  });\r\n\r\n  return size;\r\n}\r\n\r\nexport function useIsExpired(time?: Time): boolean | undefined {\r\n  const [isExpired, setIsExpired] = useState<boolean>();\r\n\r\n  useEffect(() => {\r\n    if (time === undefined) {\r\n      setIsExpired(undefined);\r\n      return;\r\n    }\r\n    const end = Date.parse(time);\r\n    const msLeft = end - new Date().getTime();\r\n    if (msLeft > 0) {\r\n      setIsExpired(false);\r\n      const t = setTimeout(() => {\r\n        setIsExpired(true);\r\n      }, msLeft);\r\n\r\n      return () => {\r\n        clearTimeout(t);\r\n      };\r\n    } else {\r\n      setIsExpired(true);\r\n    }\r\n  }, [time]);\r\n\r\n  return isExpired;\r\n}\r\n\r\nexport function useMsRemaining(time: Time): number {\r\n  const [msRemaining, setMsRemaining] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const end = Date.parse(time);\r\n    const msLeft = Math.max(0, end - new Date().getTime());\r\n    setMsRemaining(msLeft);\r\n    if (msLeft > 0) {\r\n      const interval = setInterval(() => {\r\n        const msLeft = Math.max(0, end - new Date().getTime());\r\n        setMsRemaining(msLeft);\r\n        if (msLeft <= 0) {\r\n          clearInterval(interval);\r\n        }\r\n      }, 90);\r\n\r\n      return () => {\r\n        clearInterval(interval);\r\n      };\r\n    }\r\n  }, [time]);\r\n\r\n  return msRemaining;\r\n}\r\n","import classNames from \"classnames\";\nimport { useEffect } from \"react\";\nimport HangmanApi from \"../../clients/HangmanApi\";\nimport \"./Keyboard.css\";\n\nexport type Key =\n  | \"a\"\n  | \"b\"\n  | \"c\"\n  | \"d\"\n  | \"e\"\n  | \"f\"\n  | \"g\"\n  | \"h\"\n  | \"i\"\n  | \"j\"\n  | \"k\"\n  | \"l\"\n  | \"m\"\n  | \"n\"\n  | \"o\"\n  | \"p\"\n  | \"q\"\n  | \"r\"\n  | \"s\"\n  | \"t\"\n  | \"u\"\n  | \"v\"\n  | \"w\"\n  | \"x\"\n  | \"y\"\n  | \"z\";\n\ntype Props = {\n  onClick(key: Key): unknown;\n  getKeyInfo(key: Key): { isEnabled: boolean; isCorrect: boolean };\n};\n\nexport default function Keyboard(props: Props) {\n  const { onClick, getKeyInfo } = props;\n\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      const key = e.key as Key;\n      if (HangmanApi.LETTERS.includes(key) && getKeyInfo(key).isEnabled) {\n        onClick(key);\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [onClick, getKeyInfo]);\n\n  function Key(props: { type: Key }) {\n    const { type: key } = props;\n    const { isEnabled, isCorrect } = getKeyInfo(key);\n\n    return (\n      <div\n        className={classNames(\n          \"keyboard-button\",\n          !isEnabled && isCorrect && \"keyboard-button-disabled-correct\",\n          !isEnabled && !isCorrect && \"keyboard-button-disabled-incorrect\"\n        )}\n        onClick={isEnabled ? () => onClick(key) : undefined}\n      >\n        {key}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"keyboard-grid\">\n      <div className=\"keyboard-row\">\n        <Key type=\"q\" />\n        <Key type=\"w\" />\n        <Key type=\"e\" />\n        <Key type=\"r\" />\n        <Key type=\"t\" />\n        <Key type=\"y\" />\n        <Key type=\"u\" />\n        <Key type=\"i\" />\n        <Key type=\"o\" />\n        <Key type=\"p\" />\n      </div>\n      <div className=\"keyboard-row\">\n        <div className=\"keyboard-spacer\" />\n        <Key type=\"a\" />\n        <Key type=\"s\" />\n        <Key type=\"d\" />\n        <Key type=\"f\" />\n        <Key type=\"g\" />\n        <Key type=\"h\" />\n        <Key type=\"j\" />\n        <Key type=\"k\" />\n        <Key type=\"l\" />\n        <div className=\"keyboard-spacer\" />\n      </div>\n      <div className=\"keyboard-row\">\n        <div className=\"keyboard-spacer\" />\n        <div className=\"keyboard-spacer\" />\n        <div className=\"keyboard-spacer\" />\n        <Key type=\"z\" />\n        <Key type=\"x\" />\n        <Key type=\"c\" />\n        <Key type=\"v\" />\n        <Key type=\"b\" />\n        <Key type=\"n\" />\n        <Key type=\"m\" />\n        <div className=\"keyboard-spacer\" />\n        <div className=\"keyboard-spacer\" />\n        <div className=\"keyboard-spacer\" />\n      </div>\n    </div>\n  );\n}\n","import classNames from \"classnames\";\r\nimport \"./Answer.css\";\r\n\r\ntype Props = {\r\n  answer: string;\r\n};\r\n\r\nexport default function Answer(props: Props) {\r\n  const { answer } = props;\r\n\r\n  return (\r\n    <div className=\"hangman-answer\">\r\n      {answer.split(\"\").map((letter, index) => {\r\n        const isCorrect = letter !== \"_\";\r\n        return (\r\n          <div\r\n            key={index}\r\n            className={classNames(\r\n              \"hangman-answer-square\",\r\n              isCorrect && \"hangman-answer-correct\"\r\n            )}\r\n          >\r\n            <div className=\"hangman-answer-letter\">\r\n              {isCorrect ? letter : \" \"}\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import classNames from \"classnames\";\r\nimport { useCallback, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { GameState } from \"../../clients/HangmanApi\";\r\nimport \"./History.css\";\r\n\r\ntype Props = {\r\n  gameState: GameState;\r\n};\r\n\r\nexport default function History(props: Props) {\r\n  const { gameState } = props;\r\n\r\n  const navigate = useNavigate();\r\n  const [isLinkCopied, setIsLinkCopied] = useState(false);\r\n\r\n  const onShare = useCallback(async () => {\r\n    await navigator.clipboard.writeText(\r\n      `${window.location.origin}/hangman/${gameState.game_id}`\r\n    );\r\n    setIsLinkCopied(true);\r\n  }, [gameState]);\r\n\r\n  const onRestart = useCallback(() => {\r\n    navigate(\"/hangman\");\r\n  }, [navigate]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"hangman-history-description\">{gameState.description}</div>\r\n      <div className=\"hangman-history\">\r\n        {gameState.guesses.map(({ letter, is_correct }, index) => (\r\n          <div\r\n            key={index}\r\n            className={classNames(\r\n              \"hangman-history-square\",\r\n              is_correct && \"hangman-history-correct\"\r\n            )}\r\n          >\r\n            {letter}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"hangman-history-options\">\r\n        <div onClick={onShare} className=\"hangman-history-option\">\r\n          {isLinkCopied ? \"Link Copied!\" : \"Share\"}\r\n        </div>\r\n        <div onClick={onRestart} className=\"hangman-history-option\">\r\n          Play again\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { Time } from \"../../clients/HangmanApi\";\r\nimport { useMsRemaining } from \"../../hooks/Hooks\";\r\nimport \"./Timer.css\";\r\n\r\ntype Props = {\r\n  expirationTime: Time;\r\n};\r\n\r\nexport default function Timer(props: Props) {\r\n  const { expirationTime } = props;\r\n\r\n  const msRemaining = useMsRemaining(expirationTime);\r\n\r\n  return (\r\n    <div className=\"hangman-timer\">\r\n      {new Date(msRemaining).toISOString().substring(14, 21)}\r\n    </div>\r\n  );\r\n}\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport HangmanApi, { GameState } from \"../clients/HangmanApi\";\r\nimport Header from \"../components/Header\";\r\nimport Loading from \"../components/Loading\";\r\nimport Keyboard, { Key } from \"../components/hangman/Keyboard\";\r\nimport Answer from \"../components/hangman/Answer\";\r\nimport History from \"../components/hangman/History\";\r\nimport \"./Hangman.css\";\r\nimport Timer from \"../components/hangman/Timer\";\r\nimport { useIsExpired } from \"../hooks/Hooks\";\r\n\r\nexport default function Hangman() {\r\n  const { gameId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [gameState, setGameState] = useState<GameState>();\r\n\r\n  const onLetterClick = useCallback(\r\n    async (letter: string) => {\r\n      if (!gameId) return;\r\n      const response = await HangmanApi.createGuess(gameId, letter);\r\n      if (response) {\r\n        setGameState(response);\r\n      }\r\n    },\r\n    [gameId]\r\n  );\r\n\r\n  const getKeyInfo = useCallback(\r\n    (key: Key) => {\r\n      if (!gameState) return { isEnabled: false, isCorrect: false };\r\n      const guess = gameState.guesses.find((g) => g.letter === key);\r\n\r\n      return {\r\n        isEnabled: !guess,\r\n        isCorrect: guess?.is_correct ?? false,\r\n      };\r\n    },\r\n    [gameState]\r\n  );\r\n\r\n  const isExpired = useIsExpired(gameState?.expiration_time);\r\n\r\n  useEffect(() => {\r\n    if (!gameId) {\r\n      navigate(\"/hangman\");\r\n      return;\r\n    }\r\n    const call = async () => {\r\n      const response = await HangmanApi.getGame(gameId);\r\n      setGameState(response);\r\n    };\r\n    call();\r\n  }, [gameId, navigate]);\r\n\r\n  if (!gameState || !gameId) {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Loading />\r\n      </>\r\n    );\r\n  }\r\n\r\n  const isGameWon = gameState.answer.indexOf(\"_\") === -1;\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"hangman-content\">\r\n        <Answer answer={gameState.answer} />\r\n        {!isGameWon && isExpired && <div>You lost...</div>}\r\n        {!isGameWon && !isExpired && gameState.expiration_time && (\r\n          <Timer expirationTime={gameState.expiration_time} />\r\n        )}\r\n        {isGameWon || isExpired ? (\r\n          <History gameState={gameState} />\r\n        ) : (\r\n          <Keyboard onClick={onLetterClick} getKeyInfo={getKeyInfo} />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["HangmanApi","user_name","axios","config","time_limit","type","initial_ms","correct_guess_ms","wrong_guess_ms","response","data","console","error","gameId","letter","LETTERS","Header","linkItems","pathname","useLocation","size","useWindowSize","useState","isExpanded","setIsExpanded","toggleExpanded","useCallback","prev","links","name","to","selected","startsWith","width","map","link","className","onClick","src","alt","window","innerWidth","height","innerHeight","setSize","updateSize","useEffect","addEventListener","removeEventListener","useIsExpired","time","isExpired","setIsExpired","undefined","msLeft","Date","parse","getTime","t","setTimeout","clearTimeout","useMsRemaining","msRemaining","setMsRemaining","end","Math","max","interval","setInterval","clearInterval","Keyboard","props","getKeyInfo","Key","key","isEnabled","isCorrect","classNames","handleKeyDown","e","document","Answer","answer","split","index","History","gameState","navigate","useNavigate","isLinkCopied","setIsLinkCopied","onShare","navigator","clipboard","writeText","location","origin","game_id","onRestart","description","guesses","is_correct","Timer","expirationTime","toISOString","substring","Hangman","useParams","setGameState","onLetterClick","guess","find","g","expiration_time","call","Loading","isGameWon","indexOf","hasOwn","hasOwnProperty","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","includes","join","module","exports","default"],"sourceRoot":""}
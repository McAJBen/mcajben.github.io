{"version":3,"file":"static/js/75.e726d99e.chunk.js","mappings":"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","sources":["clients/HangmanApi.ts","components/Header.tsx","hooks/Hooks.tsx","routes/HangmanStart.tsx"],"sourcesContent":["import axios from \"axios\";\n\nexport const LETTERS = [\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\",\n] as const;\n\nexport type Letter = (typeof LETTERS)[number];\n\nexport type Time = string;\n\nexport type GameState = {\n  game_id: string;\n  user_name: string;\n  answer: string;\n  start_time: Time;\n  expiration_time?: Time;\n  description?: string;\n  guesses: {\n    letter: Letter;\n    time: Time;\n    is_correct: boolean;\n  }[];\n};\n\nexport type Leaderboard = {\n  game_id: string;\n  user_name: string;\n  answer: string;\n  total_time: number;\n};\n\nexport default class HangmanApi {\n  private static URL = \"https://hangman-api.mcajben.com\";\n\n  public static async createGame(user_name: string) {\n    try {\n      const response = await axios.post<GameState>(`${this.URL}/game`, {\n        user_name,\n        time_limit: {\n          type: \"Cumulative\",\n          initial_ms: 60000,\n          correct_guess_ms: 5000,\n          wrong_guess_ms: -5000,\n        },\n      });\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  public static async getGame(gameId: string) {\n    try {\n      const response = await axios.get<GameState>(`${this.URL}/game/${gameId}`);\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  public static async createGuess(gameId: string, letter: string) {\n    try {\n      const response = await axios.post<GameState>(\n        `${this.URL}/game/${gameId}/guess/${letter}`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  public static async getLeaderboard() {\n    try {\n      const response = await axios.get<Leaderboard[]>(\n        `${this.URL}/leaderboard`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n","import { useCallback, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useWindowSize } from \"../hooks/Hooks\";\nimport \"./Header.css\";\n\nexport default function Header() {\n  const { pathname } = useLocation();\n  const size = useWindowSize();\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const toggleExpanded = useCallback(() => {\n    setIsExpanded((prev) => !prev);\n  }, []);\n\n  const links = [\n    {\n      name: \"Home\",\n      to: \"/\",\n      selected: pathname === \"/\",\n    },\n    {\n      name: \"Hangman\",\n      to: \"/hangman\",\n      selected: pathname.startsWith(\"/hangman\"),\n    },\n    {\n      name: \"Resume\",\n      to: \"/resume\",\n      selected: pathname.startsWith(\"/resume\"),\n    },\n  ];\n\n  let linkItems: JSX.Element;\n  if (size.width > 450) {\n    linkItems = (\n      <>\n        {links.map((link) => (\n          <span key={link.name} className=\"header-float-left\">\n            <Link className=\"header-button-link\" to={link.to}>\n              {link.name}\n            </Link>\n          </span>\n        ))}\n      </>\n    );\n  } else {\n    linkItems = (\n      <span\n        onClick={toggleExpanded}\n        className=\"material-icons-round header-hamburger\"\n      >\n        menu\n      </span>\n    );\n  }\n\n  return (\n    <div className=\"header-content\">\n      <div className=\"header-top-row\">\n        {linkItems}\n        <span className=\"header-float-right\">\n          <Link className=\"header-button-link\" to=\"/resume\">\n            Ben McAllister\n            <img src=\"/ben.jpg\" className=\"header-spinning-image\" alt=\"ben\" />\n          </Link>\n        </span>\n      </div>\n      {isExpanded &&\n        links.map((link) => (\n          <div key={link.name} className=\"header-row\">\n            <Link className=\"header-button-link\" to={link.to}>\n              {link.name}\n            </Link>\n          </div>\n        ))}\n    </div>\n  );\n}\n","import { useCallback, useEffect, useState } from \"react\";\nimport { Time } from \"../clients/HangmanApi\";\n\nexport function useWindowSize() {\n  const [size, setSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n\n  const updateSize = useCallback(() => {\n    setSize({\n      width: window.innerWidth,\n      height: window.innerHeight,\n    });\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", updateSize);\n    return () => {\n      window.removeEventListener(\"resize\", updateSize);\n    };\n  });\n\n  return size;\n}\n\nexport function useIsExpired(time?: Time): boolean | undefined {\n  const [isExpired, setIsExpired] = useState<boolean>();\n\n  useEffect(() => {\n    if (time === undefined) {\n      setIsExpired(undefined);\n      return;\n    }\n    const end = Date.parse(time);\n    const msLeft = end - new Date().getTime();\n    if (msLeft > 0) {\n      setIsExpired(false);\n      const t = setTimeout(() => {\n        setIsExpired(true);\n      }, msLeft);\n\n      return () => {\n        clearTimeout(t);\n      };\n    } else {\n      setIsExpired(true);\n    }\n  }, [time]);\n\n  return isExpired;\n}\n\nexport function useMsRemaining(time: Time): number {\n  const [msRemaining, setMsRemaining] = useState(0);\n\n  useEffect(() => {\n    const end = Date.parse(time);\n    const msLeft = Math.max(0, end - new Date().getTime());\n    setMsRemaining(msLeft);\n    if (msLeft > 0) {\n      const interval = setInterval(() => {\n        const msLeft = Math.max(0, end - new Date().getTime());\n        setMsRemaining(msLeft);\n        if (msLeft <= 0) {\n          clearInterval(interval);\n        }\n      }, 90);\n\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  }, [time]);\n\n  return msRemaining;\n}\n","import { useCallback, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport HangmanApi, { Leaderboard } from \"../clients/HangmanApi\";\nimport Header from \"../components/Header\";\nimport \"./HangmanStart.css\";\n\nexport default function HangmanStart() {\n  const navigate = useNavigate();\n  const [userName, setUserName] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [leaderboard, setLeaderboard] = useState<Leaderboard[]>();\n  const [error, setError] = useState<string>();\n\n  const onUserNameChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setUserName(event.target.value);\n    },\n    []\n  );\n\n  const onClick = useCallback(async () => {\n    setLoading(true);\n    localStorage.setItem(\"userName\", userName);\n    const response = await HangmanApi.createGame(userName);\n    if (!response) {\n      setError(\"Error creating game\");\n      setLoading(false);\n      return;\n    }\n    navigate(`/hangman/${response.game_id}`);\n  }, [navigate, userName]);\n\n  const onUserNameKeyDown = useCallback(\n    (event: React.KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === \"Enter\") {\n        onClick();\n      }\n    },\n    [onClick]\n  );\n\n  useEffect(() => {\n    const prevUserName = localStorage.getItem(\"userName\");\n    if (prevUserName) {\n      setUserName(prevUserName);\n    }\n    async function loadLeaderboard() {\n      const response = await HangmanApi.getLeaderboard();\n      if (response) {\n        setLeaderboard(response);\n      }\n    }\n    loadLeaderboard();\n  }, []);\n\n  return (\n    <>\n      <Header />\n      <div className=\"hangman-start-content\">\n        <input\n          className=\"hangman-start-user-input\"\n          type=\"text\"\n          onChange={onUserNameChange}\n          value={userName}\n          placeholder=\"Your name\"\n          onKeyDown={onUserNameKeyDown}\n        />\n        <div\n          onClick={loading ? undefined : onClick}\n          className=\"hangman-start-button\"\n        >\n          Start Game\n        </div>\n        {error}\n        {leaderboard && (\n          <table className=\"hangman-start-leaderboard\">\n            <thead>\n              <tr>\n                <th>Place</th>\n                <th>User Name</th>\n                <th>Answer</th>\n                <th>Total Time</th>\n              </tr>\n            </thead>\n            <tbody>\n              {leaderboard.map((boardItem, index) => (\n                <tr key={index}>\n                  <td>{index + 1}.</td>\n                  <td>{boardItem.user_name}</td>\n                  <td>{boardItem.answer}</td>\n                  <td>{Math.round(boardItem.total_time / 100) / 10}s</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n    </>\n  );\n}\n"],"names":["LETTERS","HangmanApi","_classCallCheck","_createClass","key","value","_createGame","_asyncToGenerator","_regeneratorRuntime","mark","_callee","user_name","response","wrap","_context","prev","next","axios","concat","this","URL","time_limit","type","initial_ms","correct_guess_ms","wrong_guess_ms","sent","abrupt","data","t0","console","error","stop","_x","apply","arguments","_getGame","_callee2","gameId","_context2","_x2","_createGuess","_callee3","letter","_context3","_x3","_x4","_getLeaderboard","_callee4","_context4","Header","linkItems","pathname","useLocation","size","useWindowSize","_useState","useState","_useState2","_slicedToArray","isExpanded","setIsExpanded","toggleExpanded","useCallback","links","name","to","selected","startsWith","width","_jsx","_Fragment","children","map","link","className","Link","onClick","_jsxs","src","alt","window","innerWidth","height","innerHeight","setSize","updateSize","useEffect","addEventListener","removeEventListener","useIsExpired","time","_useState3","_useState4","isExpired","setIsExpired","undefined","msLeft","Date","parse","getTime","t","setTimeout","clearTimeout","useMsRemaining","_useState5","_useState6","msRemaining","setMsRemaining","end","Math","max","interval","setInterval","clearInterval","HangmanStart","navigate","useNavigate","userName","setUserName","loading","setLoading","leaderboard","setLeaderboard","_useState7","_useState8","setError","onUserNameChange","event","target","localStorage","setItem","createGame","game_id","onUserNameKeyDown","prevUserName","getItem","_loadLeaderboard","getLeaderboard","loadLeaderboard","onChange","placeholder","onKeyDown","boardItem","index","answer","round","total_time"],"sourceRoot":""}